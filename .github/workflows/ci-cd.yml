name: CI/CD â†’ ECR & EC2 via SSM

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-southeast-1       # ECR, S3 and SSM calls
  ECR_REPOSITORY: rag-chatbot
  IMAGE_TAG: latest
  S3_BUCKET: rag-faqstore

jobs:
  build-and-push:
    name: Build & Push Docker image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Remove stale Chainlit config
        # before docker build, so new image has no old config.toml
        run: rm -rf .chainlit/config.toml || true

      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image
        run: |
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          docker build \
            --tag $ECR_URI/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push $ECR_URI/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to EC2 via SSM
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Deploy container via SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-ids "${{ secrets.EC2_INSTANCE_ID }}" \
            --parameters 'commands=[
              # 1) Log in to ECR
              "aws ecr get-login-password \
                 --region ${{ env.AWS_REGION }} \
               | docker login --username AWS \
                 --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com",

              # 2) Pull & restart container,
              "docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}",
              "docker stop rag-chatbot || true",
              "docker rm rag-chatbot   || true",
              "docker run -d \
                 --name rag-chatbot \
                 -p 127.0.0.1:8000:8000 \
                 -e AWS_DEFAULT_REGION=us-east-1 \
                 -e AWS_REGION=${{ env.AWS_REGION }} \
                 -e S3_BUCKET=${{ env.S3_BUCKET }} \
                 --restart unless-stopped \
                 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
            ]' \
            --region ${{ env.AWS_REGION }}
